/* http.vapi generated by valac 0.48.24, do not modify. */

namespace Http {
	[CCode (cheader_filename = "http.h")]
	public class ByteArray {
		public ssize_t download_size;
		public ByteArray (owned uint8[] data, ssize_t length, ssize_t down_size = 0);
		public uint8[] data { get; }
		public ssize_t length { get; }
	}
	[CCode (cheader_filename = "http.h")]
	public class Client : GLib.Object {
		public Gee.HashMap<string,string> headers;
		public Client ();
		public new Http.Response @get (string raw_url) throws Http.HttpError, GLib.IOError, GLib.Error;
		public Http.Response head (string raw_url) throws Http.HttpError, GLib.IOError, GLib.Error;
		public Http.Response post (string raw_url, string data, Gee.HashMap<string,string>? post_headers = null) throws Http.HttpError, GLib.IOError, GLib.Error;
		public Http.Response post_form (string raw_url, Gee.HashMap<string,string> data) throws Http.HttpError, GLib.IOError, GLib.Error;
		public bool allow_cookies { get; set; }
		public uint timeout { get; set; }
		public bool use_compression { get; set; }
	}
	[CCode (cheader_filename = "http.h")]
	public class Response {
		public string to_string ();
		public Gee.HashMap<string,string> headers { get; private set; }
		public Http.ByteArray? payload { get; private set; }
		public Http.Status status { get; private set; }
	}
	[CCode (cheader_filename = "http.h")]
	public class Status {
		public string to_string ();
		public uint code { get; private set; }
		public string protocol_version { get; private set; }
		public string text { get; private set; }
	}
	[CCode (cheader_filename = "http.h")]
	public class URL {
		public URL ();
		public URL.from_string (string url_str) throws Http.HttpError;
		public string to_string ();
		public string fragment { get; private set; }
		public string host { get; private set; }
		public string path { get; private set; }
		public uint16 port { get; private set; }
		public string query { get; private set; }
		public string raw { get; private set; }
		public string scheme { get; private set; }
	}
	[CCode (cheader_filename = "http.h")]
	public enum Method {
		HEAD,
		GET,
		POST;
		public string to_string ();
	}
	[CCode (cheader_filename = "http.h")]
	public errordomain HttpError {
		MALFORMED_URL,
		BAD_RESPONSE,
		UNSUPPORTED_PROTOCOL,
		UNKNOWN_TRANSFER_LENGTH,
		BAD_CHUNK_SIZE,
		UNKNOWN_PAYLOAD_LENGTH,
		CONNECTION_ERROR
	}
	[CCode (cheader_filename = "http.h")]
	public static string encode (Gee.HashMap<string,string> data);
}
